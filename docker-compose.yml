version: "3"
services:

# redis
  redis1:
    image: redis:latest
    container_name: redis1
    hostname: redis1
    restart: always
    networks:
      - with-baby-geo
    ports:
      - 6380:6379
  redis2:
    image: redis:latest
    container_name: redis2
    hostname: redis2
    restart: always
    networks:
      - with-baby-geo
    ports:
      - 6381:6379
  redis3:
    image: redis:latest
    container_name: redis3
    hostname: redis3
    restart: always
    networks:
      - with-baby-geo
    ports:
      - 6382:6379
  redis4:
    image: redis:latest
    container_name: redis4
    hostname: redis4
    restart: always
    networks:
      - with-baby-geo
    ports:
      - 6383:6379
  redis5:
    image: redis:latest
    container_name: redis5
    hostname: redis5
    restart: always
    networks:
      - with-baby-geo
    ports:
      - 6384:6379


# mongodb
  mongo1:
    container_name: mongo1
    hostname: mongo1
    image: mongo:latest
    volumes:
      - ${MONGO1_DIR}:/data/db
      - ./mongo-replic-set-init.sh:/scripts/rs-init.sh
      - ./mongo-index-init.sh:/scripts/index-init.sh
    networks:
      - with-baby-geo
    restart: always
    ports:
      - 27021:27017
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]
  mongo2:
    container_name: mongo2
    hostname: mongo2
    image: mongo:latest
    volumes:
      - ${MONGO2_DIR}:/data/db
      - ./mongo-index-init.sh:/scripts/index-init.sh
    networks:
      - with-baby-geo
    restart: always
    ports:
      - 27022:27017
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]
  mongo3:
    container_name: mongo3
    hostname: mongo3
    image: mongo:latest
    volumes:
      - ${MONGO3_DIR}:/data/db
      - ./mongo-index-init.sh:/scripts/index-init.sh
    networks:
      - with-baby-geo
    restart: always
    ports:
      - 27023:27017
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]
  
  # with-baby-geo

  with-baby-geo1:
    build: .
    container_name: with-baby-geo1
    hostname: with-baby-geo1
    image: with-baby-geo:latest
    networks:
      - with-baby-geo
    depends_on:
      - redis1
      - redis2
      - redis3
      - redis4
      - redis5
      - mongo1
      - mongo2
      - mongo3
    environment:
      - REDIS_URIS=redis://redis1:6379,redis://redis2:6379,redis://redis3:6379,redis://redis4:6379,redis://redis5:6379
      - REDIS_EXPIRE=60
      - REDIS_TIMEOUT=10
      - MONGO_URIS=mongodb://mongo1:27017,mongo2:27017,mongo3:27017/?replicaSet=dbrs
      - MONGO_DATABASE=with-baby-geo
      - PORT=8000

  with-baby-geo2:
    build: .
    container_name: with-baby-geo2
    hostname: with-baby-geo2
    image: with-baby-geo:latest
    networks:
      - with-baby-geo
    depends_on:
      - redis1
      - redis2
      - redis3
      - redis4
      - redis5
      - mongo1
      - mongo2
      - mongo3
    environment:
      - REDIS_URIS=redis://redis1:6379,redis://redis2:6379,redis://redis3:6379,redis://redis4:6379,redis://redis5:6379
      - REDIS_EXPIRE=60
      - REDIS_TIMEOUT=10
      - MONGO_URIS=mongodb://mongo1:27017,mongo2:27017,mongo3:27017/?replicaSet=dbrs
      - MONGO_DATABASE=with-baby-geo
      - PORT=8000

  with-baby-geo3:
    build: .
    container_name: with-baby-geo3
    hostname: with-baby-geo3
    image: with-baby-geo:latest
    networks:
      - with-baby-geo
    depends_on:
      - redis1
      - redis2
      - redis3
      - redis4
      - redis5
      - mongo1
      - mongo2
      - mongo3
    environment:
      - REDIS_URIS=redis://redis1:6379,redis://redis2:6379,redis://redis3:6379,redis://redis4:6379,redis://redis5:6379
      - REDIS_EXPIRE=60
      - REDIS_TIMEOUT=10
      - MONGO_URIS=mongodb://mongo1:27017,mongo2:27017,mongo3:27017/?replicaSet=dbrs
      - MONGO_DATABASE=with-baby-geo
      - PORT=8000
  
  # nginx
  nginx:
    image: nginx:latest
    container_name: with-baby-geo-nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - with-baby-geo1
      - with-baby-geo2
      - with-baby-geo3
    networks:
      - with-baby-geo
    ports:
      - 8000:8000
networks:
  with-baby-geo:
    driver: bridge
      